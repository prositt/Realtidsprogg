package todo;

import done.ClockInput;
import done.ClockOutput;
import se.lth.cs.realtime.semaphore.Semaphore;

public class ButtonThread extends Thread {

	private ClockInput	in;
	private ClockOutput	out;
	private Semaphore	sig;

	private Semaphore	signal;

	SharedData data;

	ButtonThread(ClockInput	input,	SharedData data){
		in = input;
		this.data = data;
		signal = input.getSemaphoreInstance();
	}

	@Override
	public void run() {
		int prevChoice = 0;
		while(true){


			signal.take();

			data.alarmStatus(in.getAlarmFlag());

			int choice = in.getChoice();
			if(choice!=0){
				prevChoice = choice; 
			} 

			if(prevChoice == 1 && choice == 0){
				data.setAlarm(in.getValue());
				System.out.println("case 1");
			}
			if(prevChoice ==2&& choice == 0){
				data.setClockTime(in.getValue());
				System.out.println("case 2");
			}

		}


	}

}




