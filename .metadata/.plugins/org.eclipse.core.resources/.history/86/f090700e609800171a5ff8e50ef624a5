package todo;

import done.ClockInput;
import done.ClockOutput;
import se.lth.cs.realtime.semaphore.Semaphore;

public class ButtonThread extends Thread {
	
	private ClockInput	in;
	private ClockOutput	out;
	private Semaphore	sig;
	
	private Semaphore	signal;
	
	SharedData data;
	
	ButtonThread(ClockInput	input,	SharedData data){
		in = input;
		this.data = data;
		signal = input.getSemaphoreInstance();
	}

	@Override
	public void run() {
		while(true){
			
		
		signal.take();
		
		data.alarmStatus(in.getAlarmFlag());
		
		int prevChoice = 0;
		int choice = in.getChoice();
		if(choice!=0){
			prevChoice = choice; 
		} else {
			switch(prevChoice){
				case 1:
					data.setAlarm(in.getValue());
				case 2:
					data.setClockTime(in.getValue());
			}
		}
		

		}
		
	}

	
	
}
