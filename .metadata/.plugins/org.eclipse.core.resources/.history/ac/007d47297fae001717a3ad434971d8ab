package todo;


import se.lth.cs.realtime.*;
import done.AbstractWashingMachine;


public class SpinController extends PeriodicThread {
	// TODO: add suitable attributes	AbstractWashingMachine mach;
	AbstractWashingMachine mach;
	int mode;
	double temp;
	long lastSwitch;
	int currentDirection;
	double speed;

	public SpinController(AbstractWashingMachine mach, double speed) {
		super((long) (1000/speed)); // TODO: replace with suitable period
		mode = SpinEvent.SPIN_OFF;
		mach.setSpin(AbstractWashingMachine.SPIN_OFF);
		this.mach = mach;
		currentDirection = AbstractWashingMachine.SPIN_LEFT;
		this.speed = speed;
	}

	public void perform() {
		
		SpinEvent e = (SpinEvent) mailbox.tryFetch();
		if (e!= null){
			mode = e.getMode();
			lastSwitch = System.currentTimeMillis();
			System.out.println("MILIS UPPDATED");
		}
		switch(mode){
		case (SpinEvent.SPIN_OFF):
		mach.setSpin(AbstractWashingMachine.SPIN_OFF);
		break;
		case (SpinEvent.SPIN_SLOW):
			if((System.currentTimeMillis()-lastSwitch) >1000*5)
				currentDirection = (currentDirection == AbstractWashingMachine.SPIN_RIGHT) ? AbstractWashingMachine.SPIN_LEFT : AbstractWashingMachine.SPIN_RIGHT;
			mach.setSpin(currentDirection);
			lastSwitch = System.currentTimeMillis();
		break;
		
		case (SpinEvent.SPIN_FAST): 
			mach.setSpin(AbstractWashingMachine.SPIN_FAST);
		break;
		// TODO: implement this method
	}
	}
}
